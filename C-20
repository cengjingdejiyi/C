//采用递归方法，给出汉诺塔问题需要移动盘子的步骤及步数，并分析步数与盘子数之
//间的关系。
#include <stdio.h>  
#include<math.h>
void hanoi(int n, char from, char to, char aux) {  //viod函数不接受任何参数，它的
                                                   //主要目的是执行printf语句来在
												   //控制台上打印一条消息。使用void
												   //作为参数列表表示可以调用这个函
												   //数而不传递任何参数。
    if (n == 1) {  
        printf("将盘子从杆%c移动到杆%c\n", from, to);  
        return;//在函数内部，首先检查n是否为1。如果是，就
		       //打印将盘子从起始柱子移动到目标柱子的信息
    }  
    hanoi(n - 1, from, aux, to);  
    printf("将盘子从杆%c移动到杆%c\n", from, to);  
    hanoi(n - 1, aux, to, from);//如果n大于1，函数会先递归
	                            //调用自己，将n-1个盘子从起
								//始柱子移动到辅助柱子（借助
								//目标柱子）。然后，再递归调
								//用自己，将剩下的一个盘子从
								//起始柱子移动到目标柱子（借
								//助辅助柱子）。最后，再次递归
								//调用自己，将n-1个盘子从辅助柱
								//子移动到目标柱子（借助起始柱子）  
}
int main() { 
    int n;  
    printf("请输入盘子的个数：");  
    scanf("%d", &n);
    int j = pow(2,n)-1;
	printf("所需总步数为%d\n",j);  
    hanoi(n, 'A', 'C', 'B'); 
    return 0;
}
//结果：3
//所需总步数为7 
//将盘子从杆A移动到杆C
//将盘子从杆A移动到杆B
//将盘子从杆C移动到杆B
//将盘子从杆A移动到杆C
//将盘子从杆B移动到杆A
//将盘子从杆B移动到杆C
//将盘子从杆A移动到杆C
  
